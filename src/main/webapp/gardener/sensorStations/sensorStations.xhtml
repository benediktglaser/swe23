<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3c.org/1999/xhtml"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/main.xhtml">

    <ui:define name="content">
        <form id="downloadForm" method="get">
        </form>

        <h:form id="sensorStationForm">
            <div class="card">
                <p:outputPanel>
                    <p:carousel id="sensorstationCarousel"
                                value="#{sensorStationListController.getAllSensorStationByOwner()}"
                                var="sensorStation"
                                numVisible="3" numScroll="3">
                        <div class="sensorStation-item">
                            <div class="sensorStation-item-content">
                                <div class="mb-3">
                                    <h:graphicImage library="images"
                                                    name="#{sensorStationListController.getFrontPicture(sensorStation)}"
                                                    height="100" width="200"/>
                                </div>
                                <p:outputPanel id="carossel">

                                    <h4 class="mb-1">#{sensorStation.name}</h4>
                                    <h6 class="mt-0 mb-3">
                                    </h6>
                                    <p:commandButton id="minmax" value="Min/Max edit"
                                                     update=":sensorStationForm"
                                                     oncomplete="PF('sensorStationTypeDialog').show()"
                                                     actionListener="#{sessionSensorStationBean.setSensorStation(sensorStation)}"
                                                     action="#{sensorStationDetailController.setSensorStation(sensorStation)}"
                                    />
                                    <p:commandButton id="edit" icon="pi pi-pencil"
                                                     update=":sensorStationForm"
                                                     oncomplete="PF('sensorStationFormEditDialog').show()"
                                                     actionListener="#{sessionSensorStationBean.setSensorStation(sensorStation)}"
                                                     action="#{sensorStationDetailController.setSensorStation(sensorStation)}"
                                    />
                                    <p:commandButton id="sensordata" value="Sensordata"
                                                     action="#{sensorStationListController.redirectToSensorDataPage(sensorStation)}"/>
                                    <p:commandButton id="gallery" value="Gallery"
                                                     action="#{sensorStationListController.redirectToGallery(sensorStation)}"/>
                                    <p:commandButton id="download" value="DownloadQRCode"
                                                     action="#{QRCodeDownloadController.doUpdate(sensorStation.id)}"/>
                                    <script>
                                        function sent(param) {
                                            const sensorLink = "http://localhost:8080/visitor/sensorStations/gallery.xhtml";
                                            const sensorUrl = sensorLink + param;
                                            document.getElementById("downloadForm").setAttribute("action", sensorUrl);
                                            document.getElementById("downloadForm").submit();
                                        }
                                    </script>
                                </p:outputPanel>
                            </div>
                        </div>
                    </p:carousel>
                </p:outputPanel>
            </div>
            <p:dialog header="Sensor Station Details" id="sensorStationFormEditDialog"
                      widgetVar="sensorStationFormEditDialog" modal="true" showEffect="fade" hideEffect="fade"
                      resizable="false" dynamic="true">
                <h:panelGrid columns="2">
                    <p:outputLabel for="plant_name" value="Plant Name: "/>
                    <p:inputText id="plant_name" value="#{sessionSensorStationBean.sensorStation.name}"/>
                    <p:outputLabel for="plant_category" value="Plant Category: "/>
                    <p:inputText id="plant_category" value="#{sessionSensorStationBean.sensorStation.category}">
                    </p:inputText>
                    <p:outputLabel for="plant_interval" value="Interval(inlcudes overhead #{sessionSensorStationBean.sensorStation.accessPoint.thresholdInterval}): "/>
                    <p:inputText id="plant_interval"
                                 value="#{sessionSensorStationBean.sensorStation.accessPoint.sendingInterval}">
                    </p:inputText>
                </h:panelGrid>
                    <p:commandButton id="save" value="Save"
                                     update=":sensorStationForm sensorStationForm:sensorStationTypeDialog sensorStationForm:sensorStationFormEditDialog sensorstationCarousel"
                                     action="#{sensorDataTypeListController.setSensorStation(sensorStationDetailController.sensorStation)}"/>
            </p:dialog>
            <p:dialog header="Sensor Type Limits" id="sensorStationTypeDialog"
                      widgetVar="sensorStationTypeDialog" modal="true" showEffect="fade" hideEffect="fade"
                      resizable="false">

                <p:outputPanel id="sensorStationTypeData">
                    <p:dataTable id="dataTable"
                                 value="#{sensorDataTypeListController.getAllSensorDataTypeBySensorStation(sensorStationDetailController.sensorStation)}"
                                 var="type" scrollable="true" scrollHeight="400">

                        <p:column headerText="Sensor Type">
                            <h:outputText value="#{type.type}"/>
                        </p:column>
                        <p:column headerText="Min Limit">
                            <h:outputText value="#{type.getMinLimit()}"/>
                        </p:column>
                        <p:column headerText="Max Limit">
                            <h:outputText value="#{type.maxLimit}"/>
                        </p:column>
                        <p:column headerText="Create Date">
                            <h:outputText value="#{type.createDate.toLocalDate()}"/>
                        </p:column>
                    </p:dataTable>
                    <p:selectOneMenu id="types" value="#{sensorDataTypeInfoController.sensorDataType}">
                        <f:selectItems value="#{sensorDataTypeInfoController.allTypes}" var="sensorType"
                                       itemLabel="#{sensorType.name()}" itemValue="#{sensorType}"/>
                    </p:selectOneMenu>
                    <p:messages id="msgs"/>
                    <h:panelGrid columns="2" styleClass="mb-3">
                        <p:outputLabel for="min" value="Min Limit: "/>
                        <p:inputText id="min" value="#{sensorDataTypeInfoController.type.minLimit}">
                        </p:inputText>
                        <p:outputLabel for="max" value="Max Limit: "/>
                        <p:inputText id="max" value="#{sensorDataTypeInfoController.type.maxLimit}">
                        </p:inputText>

                    </h:panelGrid>
                    <p:separator/>
                    <h:panelGrid columns="1">
                        <p:commandButton value="Save"
                                         id="saveButton"
                                         action="#{sensorDataTypeInfoController.save(sessionSensorStationBean.getSensorStation())}"
                                         update=":sensorStationForm sensorStationForm:sensorStationTypeDialog sensorStationForm:sensorStationFormEditDialog"
                                         oncomplete="handleSave()">
                        </p:commandButton>
                    </h:panelGrid>

                </p:outputPanel>
                <script>
                    function handleSave() {
                        PF('sensorStationTypeDialog').show();
                    }
                </script>
            </p:dialog>
        </h:form>
    </ui:define>
</ui:composition>
